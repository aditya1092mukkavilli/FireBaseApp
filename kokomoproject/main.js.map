{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboardpage/dashboardpage.component.css","webpack:///./src/app/dashboardpage/dashboardpage.component.html","webpack:///./src/app/dashboardpage/dashboardpage.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registeration/registeration.component.css","webpack:///./src/app/registeration/registeration.component.html","webpack:///./src/app/registeration/registeration.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes } from '@angular/router';\nimport { RegisterationComponent } from './registeration/registeration.component';\nimport { DashboardpageComponent } from './dashboardpage/dashboardpage.component';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/register', pathMatch: 'full' },\n  { path: 'register', component: RegisterationComponent },\n  { path: 'dashbordPage', component:DashboardpageComponent }\n];\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireFunctionsModule }  from '@angular/fire/functions';\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { environment } from '../environments/environment';\nimport { RegisterationComponent } from './registeration/registeration.component';\nimport { LoginComponent } from './login/login.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material';\nimport { AuthService } from './services/auth.service';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule, routes } from './/app-routing.module';\nimport { DashboardpageComponent } from './dashboardpage/dashboardpage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterationComponent,\n    LoginComponent,\n    DashboardpageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireFunctionsModule,\n    AngularFireMessagingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    RouterModule,\n    AppRoutingModule,\n    RouterModule.forRoot(routes)\n\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboardpage works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboardpage',\n  templateUrl: './dashboardpage.component.html',\n  styleUrls: ['./dashboardpage.component.css']\n})\nexport class DashboardpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .register-form{\\r\\n    width:30%;\\r\\n    margin:0 auto;\\r\\n    margin-top:10%;\\r\\n}\\r\\n  \\r\\n  .textcenter{\\r\\n    text-align:center\\r\\n}\"","module.exports = \"<div class=\\\"register-form\\\">\\n  <h1 class=\\\"textcenter\\\">\\n    login Form\\n  </h1>\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\"  formControlName=\\\"emailFormControl\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"passwordFormControl\\\">\\n    </mat-form-field>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      emailFormControl: ['', []],\n      passwordFormControl: ['', []]\n  });\n  }\n\n  onSubmit(obj){\n    console.log(obj);\n  }\n\n}\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .register-form{\\r\\n    width:30%;\\r\\n    margin:0 auto;\\r\\n    margin-top:10%;\\r\\n}\\r\\n  \\r\\n  .textcenter{\\r\\n    text-align:center\\r\\n}\"","module.exports = \"<div class=\\\"register-form\\\">\\n    <h1 class=\\\"textcenter\\\">\\n      Registration Form\\n    </h1>\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit(registerForm.value)\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\"  formControlName=\\\"email\\\">\\n      </mat-form-field>\\n  \\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n      </mat-form-field>\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Register</button>\\n   </form>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registeration',\n  templateUrl: './registeration.component.html',\n  styleUrls: ['./registeration.component.css']\n})\nexport class RegisterationComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  errorMessage:string;\n  successMessage:String;\n\n  constructor(private formBuilder: FormBuilder, private authService:AuthService,private router:Router) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      email: ['', []],\n      password: ['', []]\n  });\n  }\n\n  onSubmit(obj){\n    this.authService.doRegister(obj)\n    .then(res => {\n      console.log(res);\n      this.router.navigateByUrl('/dashbordPage');\n    }, err => {\n      console.log(err);\n      this.errorMessage = err.message;\n      this.successMessage = \"\";\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport * as firebase from 'firebase'\nimport { auth } from 'firebase';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {AngularFirestore,AngularFirestoreDocument} from '@angular/fire/firestore';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { switchMap, startWith, tap, filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private af: AngularFirestore, private db: AngularFireDatabase, private router:Router, public afAuth: AngularFireAuth) {}\n\n\n  doRegister(value){\n    console.log(value);\n    return new Promise<any>((resolve, reject) => {\n      firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\n      .then(res => {\n        resolve(res);\n      }, err => reject(err))\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    firebase:{\n                apiKey: \"AIzaSyC3tXk4zUIvfkou6zsX0BvG83IeXOMTDQY\",\n                authDomain: \"demoskokomos.firebaseapp.com\",\n                databaseURL: \"https://demoskokomos.firebaseio.com\",\n                projectId: \"demoskokomos\",\n                storageBucket: \"\",\n                messagingSenderId: \"617314729456\" \n             }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}